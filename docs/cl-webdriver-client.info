This is cl-webdriver-client.info, produced by makeinfo version 6.7 from
cl-webdriver-client.weaved.texi.

INFO-DIR-SECTION Common Lisp
START-INFO-DIR-ENTRY
* cl-webdriver-client: (cl-webdriver-client)Common Lisp Webdriver Client.
END-INFO-DIR-ENTRY


File: cl-webdriver-client.info,  Node: Top,  Next: Introduction,  Up: (dir)

Top
***

CL Webdriver Client is client library for WebDriver.

   WebDriver is a remote control interface that enables introspection
and control of user agents.  It provides a platform- and
language-neutral wire protocol as a way for out-of-process programs to
remotely instruct the behavior of web browsers.

   Provided is a set of interfaces to discover and manipulate DOM
elements in web documents and to control the behavior of a user agent.
It is primarily intended to allow web authors to write tests that
automate a user agent from a separate controlling process, but may also
be used in such a way as to allow in-browser scripts to control a —
possibly separate — browser.

   See W3C Webdriver spec (https://www.w3.org/TR/webdriver).

* Menu:

* Introduction::
* Usage::
* Installation::
* Utils::
* API::
* Index::


File: cl-webdriver-client.info,  Node: Introduction,  Next: Usage,  Prev: Top,  Up: Top

1 Introduction
**************

CL Webdriver Client is client library for WebDriver.

   WebDriver is a remote control interface that enables introspection
and control of user agents.  It provides a platform- and
language-neutral wire protocol as a way for out-of-process programs to
remotely instruct the behavior of web browsers.

   Provided is a set of interfaces to discover and manipulate DOM
elements in web documents and to control the behavior of a user agent.
It is primarily intended to allow web authors to write tests that
automate a user agent from a separate controlling process, but may also
be used in such a way as to allow in-browser scripts to control a —
possibly separate — browser.

   See W3C Webdriver spec (https://www.w3.org/TR/webdriver).


File: cl-webdriver-client.info,  Node: Usage,  Next: Installation,  Prev: Introduction,  Up: Top

2 Usage
*******

* Menu:

* Actions::

     ;; see examples/*.lisp and t/*.lisp
     (in-package :cl-user)

     (eval-when (:compile-toplevel :load-toplevel :execute)
       (ql:quickload :cl-webdriver-client))

     (defpackage go-test
       (:use :cl :webdriver-client))

     (in-package :go-test)

     (defparameter *code* "
     package main
     import \"fmt\"

     func main() {
         fmt.Print(\"Hello WebDriver!\")
     }")

     (with-session ()
       (setf (url) "http://play.golang.org/?simple=1")
       (let ((elem (find-element "#code" :by :css-selector)))
         (element-clear elem)
         (element-send-keys elem *code*))
       (let ((btn (find-element "#run")))
         (element-click btn))

       (loop
          with div = (find-element "#output")
          for ouput = (element-text div)
          while (equal ouput "Waiting for remote server...")
          do (sleep 0.1)
          finally (print ouput)))


File: cl-webdriver-client.info,  Node: Actions,  Up: Usage

2.1 Actions
===========

The Actions API provides a low-level interface for providing virtualised
device input to the web browser.  Conceptually, the Actions commands
divide time into a series of ticks.  The local end sends a series of
actions which correspond to the change in state, if any, of each input
device during each tick.  For example, pressing a key is represented by
an action sequence consisting of a single key input device and two
ticks, the first containing a keyDown action, and the second a keyUp
action, whereas a pinch-zoom input is represented by an action sequence
consisting of three ticks and two pointer input devices of type touch,
each performing a sequence of actions pointerDown, followed by
pointerMove, and then pointerUp.

   See <https://www.w3.org/TR/webdriver/#actions> for the whole
explanation.

   To perform actions in _cl-webdriver-client_ use *note
PERFORM-ACTIONS: WEBDRIVER-CLIENT:PERFORM-ACTIONS function.  That
function implements a little language, with the following syntax:

Syntax:
-------

actions ::= ({actions-input-source}*)
actions-input-source ::= (input-source-type {action}*)
input-source-type ::= :none | :pointer | :mouse | :pen | :touch | :key
action ::= pause | pointer-move | pointer-down | pointer-up | key-down | key-up
pause ::= (:pause duration)
pointer-move ::= (:pointer-move x y)
pointer-down ::= (:pointer-down button-number)
pointer-up ::= (:pointer-up button-number)
key-down ::= (:key-down key)
key-up ::= (:key-up key)

Arguments and values:
---------------------

   * _actions_--a list of actions-input-sources.  One list for each type
     of input source that wants to be used.
   * _actions-input-source_--a list.  Specifies the list of actions to
     perform for a particular input source.
   * _duration_--an integer.  The time to pause in milliseconds.
   * _key_--a string.  A string with the character (e.g.  "a").  Use
     *note KEY: WEBDRIVER-CLIENT:KEY function. for entering special
     characters.
   * _button-number_--an integer greater than or equal to 0.
   * _x_--an integer.  Horizontal screen coordinate.
   * _y_--an integer.  Vertical screen coordinate.

Examples:
---------

     (perform-actions `((:pen
     		     (:pointer-move 22 33)
     		     (:pause 2000)
     		     (:pointer-move 23 54))))


File: cl-webdriver-client.info,  Node: Installation,  Next: Utils,  Prev: Usage,  Up: Top

3 Installation
**************

     git clone https://github.com/copyleft/cl-webdriver-client ~/quicklisp/local-projects/
     (ql:quickload :cl-webdriver-client)

   You need a running instance of selenium-server-standalone.

   [Download](http://www.seleniumhq.org/download/) it and run:

     curl -L0 https://goo.gl/SP94ZB -o selenium-server-standalone.jar
     java -jar selenium-server-standalone.jar


File: cl-webdriver-client.info,  Node: Utils,  Next: API,  Prev: Installation,  Up: Top

4 Utils
*******

There is a ':webdriver-client-utils' package which should reduce
boilerplate.  For example:

     (defpackage my-test
       (:use :cl :webdriver-client)
       (:import-from :webdriver-client-utils
                     :send-keys
                     :click
                     :wait-for
                     :classlist))

     (in-package :my-test)

     (with-session ()
       (setf (url) "http://google.com")
       (send-keys "cl-webdriver-client")
       (click "[name=btnK]")
       (wait-for "#resultStats"))


* Menu:

* Interactive session::
* Utils API conventions::
* Waiting for the reaction::
* Running tests::


File: cl-webdriver-client.info,  Node: Interactive session,  Next: Utils API conventions,  Up: Utils

4.1 Interactive session
=======================

You can just start the session and control it from your repl:

     (in-package :my-test)

     (start-interactive-session)

     (setf (url) "http://google.com")
     (send-keys "cl-webdriver-client")
     (send-keys (key :enter))
     (classlist "#slim_appbar") ; prints ("ab_tnav_wrp")

     (stop-interactive-session)


File: cl-webdriver-client.info,  Node: Utils API conventions,  Next: Waiting for the reaction,  Prev: Interactive session,  Up: Utils

4.2 Utils API conventions
=========================

If utility function needs an element to work on it defaults to
'(active-element)'.
     (click) ; click on the current active element.

   You can also pass a css selector as a last parameter.

     (print (id "#submit")) ; print id the of matched element

     (assert (= (first (classlist "div")) "first-div-ever"))

   To change default element you can:

     (setf webdriver-client-utils:*default-element-func* (lambda () (find-element "input[type=submit]"))


File: cl-webdriver-client.info,  Node: Waiting for the reaction,  Next: Running tests,  Prev: Utils API conventions,  Up: Utils

4.3 Waiting for the reaction
============================

Often you need to wait for some action to be done.  For example if you
do a '(click)' on the button to load search results, you need to wait
them to load.

     (wait-for ".search-result" :timeout 10) ; wait 10 seconds

   Timeout defaults to 30 seconds.  You can globally change it:
     (setf webdriver-client-utils:*timeout* 3)


File: cl-webdriver-client.info,  Node: Running tests,  Prev: Waiting for the reaction,  Up: Utils

4.4 Running tests
=================

REPL
====

     (ql:quickload '(:cl-selenium :prove))
     (setf prove:*enable-colors* nil)
     (prove:run :cl-webdriver-client-test)

Shell
=====

     sh
     ./test.sh


File: cl-webdriver-client.info,  Node: API,  Next: Index,  Prev: Utils,  Up: Top

5 API
*****

* Menu:

* WEBDRIVER-CLIENT package::
* WEBDRIVER-CLIENT-UTILS package::


File: cl-webdriver-client.info,  Node: WEBDRIVER-CLIENT package,  Next: WEBDRIVER-CLIENT-UTILS package,  Up: API

5.1 WEBDRIVER-CLIENT package
============================

 -- PACKAGE: WEBDRIVER-CLIENT

     This package exports functions for working with Selenium WebDriver.

     For documentation see:
     - <https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol>
     - <https://www.w3.org/TR/webdriver1>

External definitions
====================

Uncategorized
-------------

 -- WEBDRIVER-CLIENT: ELEMENT-ID (sb-pcl::object)

 -- WEBDRIVER-CLIENT: NO-SUCH-ELEMENT-ERROR

     Error signaled when no such element is found.

     Class precedence list: 'no-such-element-error, find-error, error,
     serious-condition, condition, t'

 -- WEBDRIVER-CLIENT: LOG-TYPES (&key (session *session*))

     Return the types of logs supported by the WebDriver.

     - browser: Javascript console logs from the browser.
     - client: Logs from the client side implementation of the WebDriver
     protocol (e.g.  the Java bindings).
     - driver: Logs from the internals of the driver (e.g.
     FirefoxDriver internals).
     - performance: Logs relating to the performance characteristics of
     the page under test (e.g.  resource load timings).
     - server: Logs from within the selenium server.

     See: <https://github.com/SeleniumHQ/selenium/wiki/Logging> .

 -- WEBDRIVER-CLIENT: MOUSE-CLICK (button &key (session *session*))

     Click any mouse BUTTON (at the coordinates set by the last moveto
     command).  Note that calling this command after calling buttondown
     and before calling BUTTON up (or any out-of-order interactions
     sequence) will yield undefined behaviour).

     See:
     <https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidclick>

 -- WEBDRIVER-CLIENT: MOUSE-MOVE-TO (x y &key element (session
          *session*))

     Move the mouse by an offset of the specificed ELEMENT.  If no
     ELEMENT is specified, the move is relative to the current mouse
     cursor.  If an ELEMENT is provided but no offset, the mouse will be
     moved to the center of the ELEMENT.  If the ELEMENT is not visible,
     it will be scrolled into view.

     See:
     <https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidmoveto>

 -- WEBDRIVER-CLIENT: LOGS (type &key (session *session*))

     Return the logs of a particular TYPE.
     See: *note LOG-TYPES: WEBDRIVER-CLIENT:LOG-TYPES function.

Elements
--------

 -- WEBDRIVER-CLIENT: ELEMENT-TEXT (element &key (session *session*))

     The Get ELEMENT Text command intends to return an ELEMENT’s text
     “as rendered”.  An ELEMENT’s rendered text is also used for
     locating a elements by their link text and partial link text.

     Category: Elements
     See: <https://www.w3.org/TR/webdriver1/#get-element-text> .

 -- WEBDRIVER-CLIENT: ELEMENT-ENABLED (element &key (session *session*))

     Returns if ELEMENT is enabled.

     Category: Elements
     See: <https://www.w3.org/TR/webdriver1/#is-element-enabled> .

 -- WEBDRIVER-CLIENT: ELEMENT-RECT (element &key (session *session*))



     The Get ELEMENT Rect command returns the dimensions and coordinates
     of the given web ELEMENT.  The returned value is a dictionary with
     the following members:

     x
     X axis position of the top-left corner of the web ELEMENT relative
     to the current browsing context’s document ELEMENT in CSS pixels.
     y
     Y axis position of the top-left corner of the web ELEMENT relative
     to the current browsing context’s document ELEMENT in CSS pixels.
     height
     Height of the web ELEMENT’s bounding rectangle in CSS pixels.
     width
     Width of the web ELEMENT’s bounding rectangle in CSS pixels.

     Category: Elements

 -- WEBDRIVER-CLIENT: ELEMENT-TAGNAME (element &key (session *session*))

     Return the ELEMENT's tag name.

     Category: Elements

 -- WEBDRIVER-CLIENT: ACTIVE-ELEMENT (&key (session *session*))

     Return the active element of the current browsing context’s
     document.
     The active element is the Element within the DOM that currently has
     focus.
     If there's no active element, an error is signaled.

     Category: Elements
     See: <https://www.w3.org/TR/webdriver2/#get-active-element.>
     See:
     <https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement.>

 -- WEBDRIVER-CLIENT: FIND-ELEMENT (value &key (by :css-selector)
          (session *session*))

     The Find Element command is used to find an element in the current
     browsing context that can be used as the web element context for
     future element-centric commands.

     For example, consider this pseudo code which retrieves an element
     with the #toremove ID and uses this as the argument for a script it
     injects to remove it from the HTML document:

     let body *note =: COMMON-LISP:= function.
     SESSION.find.css("#toremove");
     SESSION.execute("arguments[0].remove()", [body]);

     The BY parameter represents the element location strategy.

     It can be one of:
     - :ID : Finds element BY id.
     - :CLASS-NAME : Finds element BY class name.
     - :CSS-SELECTOR : Returns element that matches css selector.
     - :LINK-TEXT : Returns element that matches <a> element text.
     - :PARTIAL-LINK-TEXT: Returns element that matches <a> element text
     partially.
     - :TAG-NAME: Returns element that matches tag name.
     - :XPATH: Returns element that matches the XPath expression.

     If result is empty, a *note HANDLE-FIND-ERROR:
     WEBDRIVER-CLIENT:HANDLE-FIND-ERROR function. is signaled.

     Category: Elements
     See: <https://www.w3.org/TR/webdriver1/#dfn-find-element> .

 -- WEBDRIVER-CLIENT: FIND-ELEMENTS (value &key (by :css-selector)
          (session *session*))

     Find elements that match VALUE using location strategy in BY.

     Category: Elements
     See *note FIND-ELEMENT: WEBDRIVER-CLIENT:FIND-ELEMENT function.
     See <https://www.w3.org/TR/webdriver1/#find-elements> .

 -- WEBDRIVER-CLIENT: ELEMENT-DISPLAYED (element &key (session
          *session*))

     Returns if ELEMENT is visible.

     Category: Elements
     See: <https://www.w3.org/TR/webdriver1/#element-displayedness> .

 -- WEBDRIVER-CLIENT: ELEMENT-ATTRIBUTE (element name &key (session
          *session*))

     Return the ELEMENT's attribute named NAME.

     Category: Elements

Session
-------

 -- WEBDRIVER-CLIENT: DELETE-SESSION (session)

     Delete the WebDriver SESSION.

     Category: SESSION

 -- WEBDRIVER-CLIENT: START-INTERACTIVE-SESSION (&rest capabilities)

     Start an interactive session.  Use this to interact with Selenium
     driver from a REPL.

     Category: Session
     See: *note MAKE-SESSION: WEBDRIVER-CLIENT:MAKE-SESSION function.

 -- WEBDRIVER-CLIENT: STOP-INTERACTIVE-SESSION nil

     Stop an interactive session.

     Category: Session

 -- WEBDRIVER-CLIENT: USE-SESSION (session)

     Make SESSION the current SESSION.

     Category: SESSION

 -- WEBDRIVER-CLIENT: WITH-SESSION ((&rest capabilities) &body body)

     Execute BODY inside a Selenium session.

     Category: Session
     See: *note MAKE-SESSION: WEBDRIVER-CLIENT:MAKE-SESSION function.

 -- WEBDRIVER-CLIENT: MAKE-SESSION (&key (browser-name :chrome)
          browser-version (platform-name "Linux") platform-version
          accept-ssl-certs additional-capabilities)

     Creates a new WebDriver session with the endpoint node.  If the
     creation fails, a session not created error is returned.

     Category: Session
     See: <https://www.w3.org/TR/webdriver1/#new-session> .
     See: <https://www.w3.org/TR/webdriver1/#capabilities> .

Element interaction
-------------------

 -- WEBDRIVER-CLIENT: ELEMENT-SEND-KEYS (element keys &key (session
          *session*))

     The ELEMENT Send KEYS command scrolls into view the form control
     ELEMENT and then sends the provided KEYS to the ELEMENT.  In case
     the ELEMENT is not keyboard-interactable, an ELEMENT not
     interactable error is returned.

     KEYS should be a string.

     Category: ELEMENT interaction
     See: <https://www.w3.org/TR/webdriver1/#element-send-keys> .

 -- WEBDRIVER-CLIENT: ELEMENT-CLICK (element &key (session *session*))

     The ELEMENT Click command scrolls into view the ELEMENT if it is
     not already pointer-interactable, and clicks its in-view center
     point.

     If the ELEMENT’s center point is obscured by another ELEMENT, an
     ELEMENT click intercepted error is returned.  If the ELEMENT is
     outside the viewport, an ELEMENT not interactable error is
     returned.

     Category: ELEMENT interaction
     See: <https://www.w3.org/TR/webdriver1/#element-click> .

 -- WEBDRIVER-CLIENT: ELEMENT-CLEAR (element &key (session *session*))

     Clear the contents of ELEMENT (for example, a form field ELEMENT).

     Category: ELEMENT interaction
     See: <https://www.w3.org/TR/webdriver1/#dfn-element-clear.>

Navigation
----------

 -- WEBDRIVER-CLIENT: PAGE-TITLE (&key (session *session*))

     This command returns the document title of the current top-level
     browsing context, equivalent to calling document.title.

     Category: Navigation
     See: <https://www.w3.org/TR/webdriver2/#get-title> .

 -- WEBDRIVER-CLIENT: PAGE-SOURCE (&key (session *session*))

     Returns a string serialization of the DOM of the current browsing
     context active document.

     Category: Navigation
     See: <https://www.w3.org/TR/webdriver1/#get-page-source>

 -- WEBDRIVER-CLIENT: SWITCH-TO-FRAME (id &key (session *session*))

     Change focus to another frame on the page.  If the frame ID is
     null, the server
     should switch to the page's default content.

     In the context of a web browser, a frame is a part of a web page or
     browser window which displays content independent of its container,
     with the ability to load content independently.

     Category: Navigation
     See:
     <https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidframe>
     .
     See: <https://en.wikipedia.org/wiki/Frame_(World_Wide_Web)> .

 -- WEBDRIVER-CLIENT: BACK (&key (session *session*))

     This command causes the browser to traverse one step backward in
     the joint SESSION history of the current top-level browsing
     context.  This is equivalent to pressing the back button in the
     browser chrome or invoking window.history.back.

     Category: Navigation
     See: <https://www.w3.org/TR/webdriver1/#dfn-back> .

 -- WEBDRIVER-CLIENT: REFRESH (&key (session *session*))

     Refresh the current page.

     Category: Navigation

 -- WEBDRIVER-CLIENT: URL (&key (session *session*))

     Get the current url in SESSION.

     Category: Navigation
     See: <https://www.w3.org/TR/webdriver1/#dfn-get-current-url> .

Cookies
-------

 -- WEBDRIVER-CLIENT: COOKIE

     A cookie is described in [RFC6265] by a name-value pair holding the
     cookie’s data, followed by zero or more attribute-value pairs
     describing its characteristics.

     Category: Cookies

     Class precedence list: 'cookie, standard-object, t'

     Slots:
        * 'name' -- initarg: ':name'

          The name of the cookie
        * 'value' -- initarg: ':value'

          The cookie value
        * 'path' -- initarg: ':path'

          The cookie path.  Defaults to '/' if omitted when adding a
          cookie.
        * 'domain' -- initarg: ':domain'

          The domain the cookie is visible to.  Defaults to the current
          browsing context’s active document’s URL domain if omitted
          when adding a cookie.
        * 'secure' -- initarg: ':secure'

          Whether the cookie is a secure cookie.  Defaults to false if
          omitted when adding a cookie.
        * 'http-only' -- initarg: ':http-only'

          Whether the cookie is an HTTP only cookie.  Defaults to false
          if omitted when adding a cookie.
        * 'expiry' -- initarg: ':expiry'

          When the cookie expires, specified in seconds since Unix
          Epoch.  Must not be set if omitted when adding a cookie.

 -- WEBDRIVER-CLIENT: COOKIE (&key (session *session*))

     Retrieve all cookies visible to the current page.

     Category: Cookies
     See: <https://www.w3.org/TR/webdriver1/#get-all-cookies> .
     See:
     <https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidcookie>
     .

 -- WEBDRIVER-CLIENT: DELETE-COOKIE (cookie-name &key (session
          *session*))

     Delete the cookie with name COOKIE-NAME.

     Category: Cookies
     See: <https://www.w3.org/TR/webdriver1/#delete-cookie>

 -- WEBDRIVER-CLIENT: DELETE-ALL-COOKIES (&key (session *session*))

     Deletes all cookies

     Category: Cookies
     See: <https://www.w3.org/TR/webdriver1/#delete-all-cookies>

 -- WEBDRIVER-CLIENT: MAKE-COOKIE (name value &key path domain secure
          expiry)

     Create a cookie object.

     Category: Cookies

 -- WEBDRIVER-CLIENT: FIND-COOKIE (cookie-name &key (session *session*))

     Retrieve the cookie with name COOKIE-NAME.

     Category: Cookies
     See: <https://www.w3.org/TR/webdriver1/#get-named-cookie>

Document handling
-----------------

 -- WEBDRIVER-CLIENT: EXECUTE-SCRIPT (script args &key (session
          *session*))

     Inject a snippet of JavaScript into the page for execution in the
     context of the currently selected frame.  The executed SCRIPT is
     assumed to be synchronous and the result of evaluating the SCRIPT
     is returned to the client.

     The SCRIPT argument defines the SCRIPT to execute in the form of a
     function body.  The value returned by that function will be
     returned to the client.  The function will be invoked with the
     provided ARGS array and the values may be accessed via the
     arguments object in the order specified.

     Arguments may be any JSON-primitive, array, or JSON object.  JSON
     objects that define a WebElement reference will be converted to the
     corresponding DOM element.  Likewise, any WebElements in the SCRIPT
     result will be returned to the client as WebElement JSON objects.

     Category: Document handling
     See: <https://www.w3.org/TR/webdriver1/#executing-script> .

Screen capture
--------------

 -- WEBDRIVER-CLIENT: SCREENSHOT (&key (session *session*))

     Screenshots are a mechanism for providing additional visual
     diagnostic information.  They work by dumping a snapshot of the
     initial viewport’s framebuffer as a lossless PNG image.  It is
     returned to the local end as a Base64 encoded string.

     Category: Screen capture
     See: <https://www.w3.org/TR/webdriver2/#screen-capture> .

 -- WEBDRIVER-CLIENT: ELEMENT-SCREENSHOT (element &key (session
          *session*))

     The Take ELEMENT Screenshot command takes a screenshot of the
     visible region encompassed by the bounding rectangle of an ELEMENT.
     If given a parameter argument scroll that evaluates to false, the
     ELEMENT will not be scrolled into view.

     Category: Screen capture
     See: <https://www.w3.org/TR/webdriver1/#take-element-screenshot> .

User prompts
------------

 -- WEBDRIVER-CLIENT: DISMISS-ALERT (&key (session *session*))

     The Dismiss Alert command dismisses a simple dialog if present.  A
     request to dismiss an alert user prompt, which may not necessarily
     have a dismiss button, has the same effect as accepting it.

     Category: User prompts
     See: <https://www.w3.org/TR/webdriver1/#dismiss-alert>

 -- WEBDRIVER-CLIENT: ACCEPT-ALERT (&key (session *session*))

     Accept Alert.

     Category: User prompts
     See: <https://www.w3.org/TR/webdriver1/#dfn-accept-alert>

 -- WEBDRIVER-CLIENT: ALERT-TEXT (&key (session *session*))

     Get Alert Text.

     Category: User prompts
     See: <https://www.w3.org/TR/webdriver1/#get-alert-text>

Actions
-------

 -- WEBDRIVER-CLIENT: KEY (key)

     Returns a string with KEY's codepoint.

     Category: Actions
     See: <https://www.w3.org/TR/webdriver/#keyboard-actions>

 -- WEBDRIVER-CLIENT: PERFORM-ACTIONS (actions &optional (session
          *session*))

     The ACTIONS API provides a low-level interface for providing
     virtualised device input to the web browser.
     Conceptually, the ACTIONS commands divide time into a series of
     ticks.  The local end sends a series of ACTIONS which correspond to
     the change in state, if any, of each input device during each tick.
     For example, pressing a key is represented by an action sequence
     consisting of a single key input device and two ticks, the first
     containing a keyDown action, and the second a keyUp action, whereas
     a pinch-zoom input is represented by an action sequence consisting
     of three ticks and two pointer input devices of type touch, each
     performing a sequence of ACTIONS pointerDown, followed by
     pointerMove, and then pointerUp.

     Category: ACTIONS
     See: <https://www.w3.org/TR/webdriver/#>ACTIONS

Windows
-------

 -- WEBDRIVER-CLIENT: CLOSE-CURRENT-WINDOW (&key (session *session*))

     Close the current window.

     Category: Windows


File: cl-webdriver-client.info,  Node: WEBDRIVER-CLIENT-UTILS package,  Prev: WEBDRIVER-CLIENT package,  Up: API

5.2 WEBDRIVER-CLIENT-UTILS package
==================================

 -- PACKAGE: WEBDRIVER-CLIENT-UTILS

     Package with the purpose of reducing boilerplate.

     The exported definitions work with an implicit element.  The
     default implicit element is the current active element.  So, it is
     not neccesary to pass the element you are working with around most
     of the time.

External definitions
====================

Variables
---------

 -- WEBDRIVER-CLIENT-UTILS: *TIMEOUT*

     Default timeout value to use in selenium-utils functions.

 -- WEBDRIVER-CLIENT-UTILS: *DEFAULT-ELEMENT-FUNC*

     Function used to get the 'default element' by selenium-utils
     functions.
     It is *note ACTIVE-ELEMENT: WEBDRIVER-CLIENT:ACTIVE-ELEMENT
     function. function by default.

Functions
---------

 -- WEBDRIVER-CLIENT-UTILS: ID (&optional selector)

     Get active element id.

 -- WEBDRIVER-CLIENT-UTILS: GET-COOKIE (cookie name)

     Get value of COOKIE at NAME.

 -- WEBDRIVER-CLIENT-UTILS: FIND-ELEM (selector &key (by :css-selector))

     Find element BY SELECTOR.  Returns NIL if the element is not found.

 -- WEBDRIVER-CLIENT-UTILS: WAIT-FOR (selector &key (timeout *timeout*))

     Wait for an element that matches SELECTOR to appear on the screen.
     TIMEOUT indicates how much time to wait (default is *TIMEOUT*).

 -- WEBDRIVER-CLIENT-UTILS: CLASSNAME (&optional selector)

     Get active element classname.

 -- WEBDRIVER-CLIENT-UTILS: TEXT (&optional selector)

     Get active element's text.

 -- WEBDRIVER-CLIENT-UTILS: SEND-KEY (key &optional selector)

     Send a KEY to active element.

 -- WEBDRIVER-CLIENT-UTILS: CLASSLIST (&optional selector)

     Get active element class list.

 -- WEBDRIVER-CLIENT-UTILS: ATTR (name &optional selector)

     Get acttive element attribute.

 -- WEBDRIVER-CLIENT-UTILS: SEND-KEYS (keys &optional selector)

     Send KEYS to active element.

 -- WEBDRIVER-CLIENT-UTILS: ELEM (&optional selector)

     If SELECTOR is given, wait for an element that matches the SELECTOR
     to appear.
     Otherwise, call *note *DEFAULT-ELEMENT-FUNC*:
     WEBDRIVER-CLIENT-UTILS:*DEFAULT-ELEMENT-FUNC* variable. (the active
     element is returned by default).

 -- WEBDRIVER-CLIENT-UTILS: CLICK (&optional selector)

     Click on active element.


File: cl-webdriver-client.info,  Node: Index,  Prev: API,  Up: Top

6 Index
*******

 [index ]
* Menu:

* cl-webdriver-client:                   Top.                   (line 6)
* cl-webdriver-client <1>:               Top.                   (line 6)

 [index ]
* Menu:

* *DEFAULT-ELEMENT-FUNC*:                WEBDRIVER-CLIENT-UTILS package.
                                                               (line 25)
* *TIMEOUT*:                             WEBDRIVER-CLIENT-UTILS package.
                                                               (line 21)
* WEBDRIVER-CLIENT-UTILS:*DEFAULT-ELEMENT-FUNC*: WEBDRIVER-CLIENT-UTILS package.
                                                               (line 25)
* WEBDRIVER-CLIENT-UTILS:*TIMEOUT*:      WEBDRIVER-CLIENT-UTILS package.
                                                               (line 21)

 [index ]
* Menu:

* ACCEPT-ALERT:                          WEBDRIVER-CLIENT package.
                                                              (line 471)
* ACTIVE-ELEMENT:                        WEBDRIVER-CLIENT package.
                                                              (line 117)
* ALERT-TEXT:                            WEBDRIVER-CLIENT package.
                                                              (line 478)
* ATTR:                                  WEBDRIVER-CLIENT-UTILS package.
                                                              (line  68)
* BACK:                                  WEBDRIVER-CLIENT package.
                                                              (line 306)
* CLASSLIST:                             WEBDRIVER-CLIENT-UTILS package.
                                                              (line  64)
* CLASSNAME:                             WEBDRIVER-CLIENT-UTILS package.
                                                              (line  52)
* CLICK:                                 WEBDRIVER-CLIENT-UTILS package.
                                                              (line  84)
* CLOSE-CURRENT-WINDOW:                  WEBDRIVER-CLIENT package.
                                                              (line 517)
* COOKIE:                                WEBDRIVER-CLIENT package.
                                                              (line 371)
* DELETE-ALL-COOKIES:                    WEBDRIVER-CLIENT package.
                                                              (line 389)
* DELETE-COOKIE:                         WEBDRIVER-CLIENT package.
                                                              (line 381)
* DELETE-SESSION:                        WEBDRIVER-CLIENT package.
                                                              (line 190)
* DISMISS-ALERT:                         WEBDRIVER-CLIENT package.
                                                              (line 462)
* ELEM:                                  WEBDRIVER-CLIENT-UTILS package.
                                                              (line  76)
* ELEMENT-ATTRIBUTE:                     WEBDRIVER-CLIENT package.
                                                              (line 180)
* ELEMENT-CLEAR:                         WEBDRIVER-CLIENT package.
                                                              (line 264)
* ELEMENT-CLICK:                         WEBDRIVER-CLIENT package.
                                                              (line 250)
* ELEMENT-DISPLAYED:                     WEBDRIVER-CLIENT package.
                                                              (line 172)
* ELEMENT-ENABLED:                       WEBDRIVER-CLIENT package.
                                                              (line  83)
* ELEMENT-ID:                            WEBDRIVER-CLIENT package.
                                                              (line  20)
* ELEMENT-RECT:                          WEBDRIVER-CLIENT package.
                                                              (line  90)
* ELEMENT-SCREENSHOT:                    WEBDRIVER-CLIENT package.
                                                              (line 448)
* ELEMENT-SEND-KEYS:                     WEBDRIVER-CLIENT package.
                                                              (line 237)
* ELEMENT-TAGNAME:                       WEBDRIVER-CLIENT package.
                                                              (line 111)
* ELEMENT-TEXT:                          WEBDRIVER-CLIENT package.
                                                              (line  74)
* EXECUTE-SCRIPT:                        WEBDRIVER-CLIENT package.
                                                              (line 413)
* FIND-COOKIE:                           WEBDRIVER-CLIENT package.
                                                              (line 403)
* FIND-ELEM:                             WEBDRIVER-CLIENT-UTILS package.
                                                              (line  43)
* FIND-ELEMENT:                          WEBDRIVER-CLIENT package.
                                                              (line 130)
* FIND-ELEMENTS:                         WEBDRIVER-CLIENT package.
                                                              (line 163)
* GET-COOKIE:                            WEBDRIVER-CLIENT-UTILS package.
                                                              (line  39)
* ID:                                    WEBDRIVER-CLIENT-UTILS package.
                                                              (line  35)
* KEY:                                   WEBDRIVER-CLIENT package.
                                                              (line 488)
* LOG-TYPES:                             WEBDRIVER-CLIENT package.
                                                              (line  29)
* LOGS:                                  WEBDRIVER-CLIENT package.
                                                              (line  66)
* MAKE-COOKIE:                           WEBDRIVER-CLIENT package.
                                                              (line 396)
* MAKE-SESSION:                          WEBDRIVER-CLIENT package.
                                                              (line 223)
* MOUSE-CLICK:                           WEBDRIVER-CLIENT package.
                                                              (line  44)
* MOUSE-MOVE-TO:                         WEBDRIVER-CLIENT package.
                                                              (line  54)
* PAGE-SOURCE:                           WEBDRIVER-CLIENT package.
                                                              (line 282)
* PAGE-TITLE:                            WEBDRIVER-CLIENT package.
                                                              (line 274)
* PERFORM-ACTIONS:                       WEBDRIVER-CLIENT package.
                                                              (line 495)
* REFRESH:                               WEBDRIVER-CLIENT package.
                                                              (line 316)
* SCREENSHOT:                            WEBDRIVER-CLIENT package.
                                                              (line 438)
* SEND-KEY:                              WEBDRIVER-CLIENT-UTILS package.
                                                              (line  60)
* SEND-KEYS:                             WEBDRIVER-CLIENT-UTILS package.
                                                              (line  72)
* START-INTERACTIVE-SESSION:             WEBDRIVER-CLIENT package.
                                                              (line 196)
* STOP-INTERACTIVE-SESSION:              WEBDRIVER-CLIENT package.
                                                              (line 204)
* SWITCH-TO-FRAME:                       WEBDRIVER-CLIENT package.
                                                              (line 290)
* TEXT:                                  WEBDRIVER-CLIENT-UTILS package.
                                                              (line  56)
* URL:                                   WEBDRIVER-CLIENT package.
                                                              (line 322)
* USE-SESSION:                           WEBDRIVER-CLIENT package.
                                                              (line 210)
* WAIT-FOR:                              WEBDRIVER-CLIENT-UTILS package.
                                                              (line  47)
* WEBDRIVER-CLIENT-UTILS:ATTR:           WEBDRIVER-CLIENT-UTILS package.
                                                              (line  68)
* WEBDRIVER-CLIENT-UTILS:CLASSLIST:      WEBDRIVER-CLIENT-UTILS package.
                                                              (line  64)
* WEBDRIVER-CLIENT-UTILS:CLASSNAME:      WEBDRIVER-CLIENT-UTILS package.
                                                              (line  52)
* WEBDRIVER-CLIENT-UTILS:CLICK:          WEBDRIVER-CLIENT-UTILS package.
                                                              (line  84)
* WEBDRIVER-CLIENT-UTILS:ELEM:           WEBDRIVER-CLIENT-UTILS package.
                                                              (line  76)
* WEBDRIVER-CLIENT-UTILS:FIND-ELEM:      WEBDRIVER-CLIENT-UTILS package.
                                                              (line  43)
* WEBDRIVER-CLIENT-UTILS:GET-COOKIE:     WEBDRIVER-CLIENT-UTILS package.
                                                              (line  39)
* WEBDRIVER-CLIENT-UTILS:ID:             WEBDRIVER-CLIENT-UTILS package.
                                                              (line  35)
* WEBDRIVER-CLIENT-UTILS:SEND-KEY:       WEBDRIVER-CLIENT-UTILS package.
                                                              (line  60)
* WEBDRIVER-CLIENT-UTILS:SEND-KEYS:      WEBDRIVER-CLIENT-UTILS package.
                                                              (line  72)
* WEBDRIVER-CLIENT-UTILS:TEXT:           WEBDRIVER-CLIENT-UTILS package.
                                                              (line  56)
* WEBDRIVER-CLIENT-UTILS:WAIT-FOR:       WEBDRIVER-CLIENT-UTILS package.
                                                              (line  47)
* WEBDRIVER-CLIENT:ACCEPT-ALERT:         WEBDRIVER-CLIENT package.
                                                              (line 471)
* WEBDRIVER-CLIENT:ACTIVE-ELEMENT:       WEBDRIVER-CLIENT package.
                                                              (line 117)
* WEBDRIVER-CLIENT:ALERT-TEXT:           WEBDRIVER-CLIENT package.
                                                              (line 478)
* WEBDRIVER-CLIENT:BACK:                 WEBDRIVER-CLIENT package.
                                                              (line 306)
* WEBDRIVER-CLIENT:CLOSE-CURRENT-WINDOW: WEBDRIVER-CLIENT package.
                                                              (line 517)
* WEBDRIVER-CLIENT:COOKIE:               WEBDRIVER-CLIENT package.
                                                              (line 371)
* WEBDRIVER-CLIENT:DELETE-ALL-COOKIES:   WEBDRIVER-CLIENT package.
                                                              (line 389)
* WEBDRIVER-CLIENT:DELETE-COOKIE:        WEBDRIVER-CLIENT package.
                                                              (line 381)
* WEBDRIVER-CLIENT:DELETE-SESSION:       WEBDRIVER-CLIENT package.
                                                              (line 190)
* WEBDRIVER-CLIENT:DISMISS-ALERT:        WEBDRIVER-CLIENT package.
                                                              (line 462)
* WEBDRIVER-CLIENT:ELEMENT-ATTRIBUTE:    WEBDRIVER-CLIENT package.
                                                              (line 180)
* WEBDRIVER-CLIENT:ELEMENT-CLEAR:        WEBDRIVER-CLIENT package.
                                                              (line 264)
* WEBDRIVER-CLIENT:ELEMENT-CLICK:        WEBDRIVER-CLIENT package.
                                                              (line 250)
* WEBDRIVER-CLIENT:ELEMENT-DISPLAYED:    WEBDRIVER-CLIENT package.
                                                              (line 172)
* WEBDRIVER-CLIENT:ELEMENT-ENABLED:      WEBDRIVER-CLIENT package.
                                                              (line  83)
* WEBDRIVER-CLIENT:ELEMENT-ID:           WEBDRIVER-CLIENT package.
                                                              (line  20)
* WEBDRIVER-CLIENT:ELEMENT-RECT:         WEBDRIVER-CLIENT package.
                                                              (line  90)
* WEBDRIVER-CLIENT:ELEMENT-SCREENSHOT:   WEBDRIVER-CLIENT package.
                                                              (line 448)
* WEBDRIVER-CLIENT:ELEMENT-SEND-KEYS:    WEBDRIVER-CLIENT package.
                                                              (line 237)
* WEBDRIVER-CLIENT:ELEMENT-TAGNAME:      WEBDRIVER-CLIENT package.
                                                              (line 111)
* WEBDRIVER-CLIENT:ELEMENT-TEXT:         WEBDRIVER-CLIENT package.
                                                              (line  74)
* WEBDRIVER-CLIENT:EXECUTE-SCRIPT:       WEBDRIVER-CLIENT package.
                                                              (line 413)
* WEBDRIVER-CLIENT:FIND-COOKIE:          WEBDRIVER-CLIENT package.
                                                              (line 403)
* WEBDRIVER-CLIENT:FIND-ELEMENT:         WEBDRIVER-CLIENT package.
                                                              (line 130)
* WEBDRIVER-CLIENT:FIND-ELEMENTS:        WEBDRIVER-CLIENT package.
                                                              (line 163)
* WEBDRIVER-CLIENT:KEY:                  WEBDRIVER-CLIENT package.
                                                              (line 488)
* WEBDRIVER-CLIENT:LOG-TYPES:            WEBDRIVER-CLIENT package.
                                                              (line  29)
* WEBDRIVER-CLIENT:LOGS:                 WEBDRIVER-CLIENT package.
                                                              (line  66)
* WEBDRIVER-CLIENT:MAKE-COOKIE:          WEBDRIVER-CLIENT package.
                                                              (line 396)
* WEBDRIVER-CLIENT:MAKE-SESSION:         WEBDRIVER-CLIENT package.
                                                              (line 223)
* WEBDRIVER-CLIENT:MOUSE-CLICK:          WEBDRIVER-CLIENT package.
                                                              (line  44)
* WEBDRIVER-CLIENT:MOUSE-MOVE-TO:        WEBDRIVER-CLIENT package.
                                                              (line  54)
* WEBDRIVER-CLIENT:PAGE-SOURCE:          WEBDRIVER-CLIENT package.
                                                              (line 282)
* WEBDRIVER-CLIENT:PAGE-TITLE:           WEBDRIVER-CLIENT package.
                                                              (line 274)
* WEBDRIVER-CLIENT:PERFORM-ACTIONS:      WEBDRIVER-CLIENT package.
                                                              (line 495)
* WEBDRIVER-CLIENT:REFRESH:              WEBDRIVER-CLIENT package.
                                                              (line 316)
* WEBDRIVER-CLIENT:SCREENSHOT:           WEBDRIVER-CLIENT package.
                                                              (line 438)
* WEBDRIVER-CLIENT:START-INTERACTIVE-SESSION: WEBDRIVER-CLIENT package.
                                                              (line 196)
* WEBDRIVER-CLIENT:STOP-INTERACTIVE-SESSION: WEBDRIVER-CLIENT package.
                                                              (line 204)
* WEBDRIVER-CLIENT:SWITCH-TO-FRAME:      WEBDRIVER-CLIENT package.
                                                              (line 290)
* WEBDRIVER-CLIENT:URL:                  WEBDRIVER-CLIENT package.
                                                              (line 322)
* WEBDRIVER-CLIENT:USE-SESSION:          WEBDRIVER-CLIENT package.
                                                              (line 210)
* WEBDRIVER-CLIENT:WITH-SESSION:         WEBDRIVER-CLIENT package.
                                                              (line 216)
* WITH-SESSION:                          WEBDRIVER-CLIENT package.
                                                              (line 216)



Tag Table:
Node: Top250
Node: Introduction1160
Node: Usage2022
Node: Actions3068
Node: Installation5435
Node: Utils5936
Node: Interactive session6672
Node: Utils API conventions7148
Node: Waiting for the reaction7802
Node: Running tests8324
Node: API8635
Node: WEBDRIVER-CLIENT package8806
Ref: WEBDRIVER-CLIENT:ELEMENT-ID function9299
Ref: WEBDRIVER-CLIENT:NO-SUCH-ELEMENT-ERROR class9350
Ref: WEBDRIVER-CLIENT:LOG-TYPES function9557
Ref: WEBDRIVER-CLIENT:MOUSE-CLICK function10187
Ref: WEBDRIVER-CLIENT:MOUSE-MOVE-TO function10617
Ref: WEBDRIVER-CLIENT:LOGS function11124
Ref: WEBDRIVER-CLIENT:ELEMENT-TEXT function11311
Ref: WEBDRIVER-CLIENT:ELEMENT-ENABLED function11683
Ref: WEBDRIVER-CLIENT:ELEMENT-RECT function11886
Ref: WEBDRIVER-CLIENT:ELEMENT-TAGNAME function12623
Ref: WEBDRIVER-CLIENT:ACTIVE-ELEMENT function12759
Ref: WEBDRIVER-CLIENT:FIND-ELEMENT function13230
Ref: WEBDRIVER-CLIENT:FIND-ELEMENTS function14567
Ref: WEBDRIVER-CLIENT:ELEMENT-DISPLAYED function14889
Ref: WEBDRIVER-CLIENT:ELEMENT-ATTRIBUTE function15107
Ref: WEBDRIVER-CLIENT:DELETE-SESSION function15289
Ref: WEBDRIVER-CLIENT:START-INTERACTIVE-SESSION function15397
Ref: WEBDRIVER-CLIENT:STOP-INTERACTIVE-SESSION function15658
Ref: WEBDRIVER-CLIENT:USE-SESSION function15769
Ref: WEBDRIVER-CLIENT:WITH-SESSION macro15878
Ref: WEBDRIVER-CLIENT:MAKE-SESSION function16088
Ref: WEBDRIVER-CLIENT:ELEMENT-SEND-KEYS function16590
Ref: WEBDRIVER-CLIENT:ELEMENT-CLICK function17055
Ref: WEBDRIVER-CLIENT:ELEMENT-CLEAR function17598
Ref: WEBDRIVER-CLIENT:PAGE-TITLE function17867
Ref: WEBDRIVER-CLIENT:PAGE-SOURCE function18145
Ref: WEBDRIVER-CLIENT:SWITCH-TO-FRAME function18398
Ref: WEBDRIVER-CLIENT:BACK function19009
Ref: WEBDRIVER-CLIENT:REFRESH function19406
Ref: WEBDRIVER-CLIENT:URL function19523
Ref: WEBDRIVER-CLIENT:COOKIE class19727
Ref: WEBDRIVER-CLIENT:COOKIE function21006
Ref: WEBDRIVER-CLIENT:DELETE-COOKIE function21315
Ref: WEBDRIVER-CLIENT:DELETE-ALL-COOKIES function21532
Ref: WEBDRIVER-CLIENT:MAKE-COOKIE function21716
Ref: WEBDRIVER-CLIENT:FIND-COOKIE function21859
Ref: WEBDRIVER-CLIENT:EXECUTE-SCRIPT function22106
Ref: WEBDRIVER-CLIENT:SCREENSHOT function23173
Ref: WEBDRIVER-CLIENT:ELEMENT-SCREENSHOT function23592
Ref: WEBDRIVER-CLIENT:DISMISS-ALERT function24066
Ref: WEBDRIVER-CLIENT:ACCEPT-ALERT function24429
Ref: WEBDRIVER-CLIENT:ALERT-TEXT function24604
Ref: WEBDRIVER-CLIENT:KEY function24794
Ref: WEBDRIVER-CLIENT:PERFORM-ACTIONS function24958
Ref: WEBDRIVER-CLIENT:CLOSE-CURRENT-WINDOW function25929
Node: WEBDRIVER-CLIENT-UTILS package26056
Ref: WEBDRIVER-CLIENT-UTILS:*TIMEOUT* variable26629
Ref: WEBDRIVER-CLIENT-UTILS:*DEFAULT-ELEMENT-FUNC* variable26732
Ref: WEBDRIVER-CLIENT-UTILS:ID function26989
Ref: WEBDRIVER-CLIENT-UTILS:GET-COOKIE function27071
Ref: WEBDRIVER-CLIENT-UTILS:FIND-ELEM function27160
Ref: WEBDRIVER-CLIENT-UTILS:WAIT-FOR function27308
Ref: WEBDRIVER-CLIENT-UTILS:CLASSNAME function27524
Ref: WEBDRIVER-CLIENT-UTILS:TEXT function27620
Ref: WEBDRIVER-CLIENT-UTILS:SEND-KEY function27708
Ref: WEBDRIVER-CLIENT-UTILS:CLASSLIST function27807
Ref: WEBDRIVER-CLIENT-UTILS:ATTR function27904
Ref: WEBDRIVER-CLIENT-UTILS:SEND-KEYS function28001
Ref: WEBDRIVER-CLIENT-UTILS:ELEM function28101
Ref: WEBDRIVER-CLIENT-UTILS:CLICK function28408
Node: Index28495

End Tag Table
